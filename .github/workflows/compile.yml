name: compile

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CONFIGURATION_DIRECTORY: ${{ github.workspace }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: dependencygraph

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: 'build and run tests'
    runs-on: ubuntu-22.04
    container: ghcr.io/skaginn3x/skaginn3x/framework/tfc-toolchain:latest
    strategy:
      fail-fast: false
      matrix:
        presets: [ gcc-debug, gcc-release, clang-debug, clang-release, gcc-debug-dynamic, clang-debug-dynamic ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Check if there are missing pragma once
        run: |
          FILES=$(find libs exes -name "*.hpp" -type f -exec grep -H -c '#pragma once' {} \; | grep 0$ | cut -d':' -f1)
          if [ "x$FILES" != x"" ]; then 
            echo $FILES 
            exit 1
          fi
      - name: start dbus
        run: |
          dbus-daemon --system

      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '/opt/vcpkg'
          vcpkgGitCommitId: '66a252f70eebdd744c02d7ab8c1cc6fe123c70ee'
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Run CMake consuming CMakePreset.json and vcpkg.json by mean of vcpkg.
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: '${{ matrix.presets }}'
          buildPreset: '${{ matrix.presets }}'
          testPreset: '${{ matrix.presets }}'

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            */**/test-results.xml
