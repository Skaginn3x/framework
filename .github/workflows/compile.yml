name: compile

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CONFIGURATION_DIRECTORY: ${{ github.workspace }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: 'build and run tests'
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build_type: [debug, release]
        compiler: [gcc, clang]
    steps:
      - name: install dependencies
        run: |          
          sudo apt-get update
          sudo apt-get install cppcheck lsb-release wget software-properties-common gnupg g++-12 curl ninja-build autoconf-archive libtool autoconf meson gperf autopoint
          sudo apt-get install dbus-user-session
          curl https://apt.llvm.org/llvm.sh -o llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 16 all

      - uses: actions/checkout@v3
      - name: commissioning
        run: |
          sudo ./scripts/commissioning.sh
          sudo chown $USER:$USER -R /var/tfc  # todo fix this differently
          sudo chown $USER:$USER -R /run/tfc
      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '/opt/vcpkg'
          vcpkgGitCommitId: '4eda0e3c7062e61dd89a91357ddc50f742da75ef'
          vcpkgJsonGlob: 'vcpkg.json'

      - name: CMake configure
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: 'ci-${{ matrix.compiler }}-${{matrix.build_type}}'

      - name: Copy dbus config
        run: |
          sudo cp libs/configure_options/generated/dbus-tfc.conf /usr/share/dbus-1/system.d/tfc.conf
          cat /usr/share/dbus-1/system.d/tfc.conf
          sudo dbus-send --system --type=method_call --dest=org.freedesktop.DBus / org.freedesktop.DBus.ReloadConfig

      - name: CMake build and test
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          buildPreset: 'build-ci-${{ matrix.compiler }}-${{matrix.build_type}}'
          testPreset: 'test-ci-${{ matrix.compiler }}-${{matrix.build_type}}'

#      - name: Run static analysis
#        uses: JacobDomagala/StaticAnalysis@master
#        with:
#          use_cmake: true
#
#          # (Optional) clang-tidy args
#          clang_tidy_args: -checks='*,fuchsia-*,google-*,zircon-*,abseil-*,modernize-use-trailing-return-type'
#
#          # (Optional) cppcheck args
#          cppcheck_args: --enable=all --suppress=missingInclude